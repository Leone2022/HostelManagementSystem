@model IEnumerable<HostelMS.Models.Booking>
@{
    ViewData["Title"] = "My Bookings";
}

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>My Bookings</h1>
        <a asp-action="RestrictedCourseInfo" class="btn btn-info">
            <i class="fas fa-info-circle me-1"></i> Course Restrictions Info
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i>
            You don't have any bookings yet. 
            <a asp-action="Index" class="alert-link">Click here</a> to book a hostel.
        </div>
    }
    else
    {
        <!-- Quick Stats -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-warning text-white">
                    <div class="card-body text-center">
                        <h4>@Model.Count(b => b.Status == HostelMS.Models.BookingStatus.Pending)</h4>
                        <small>Pending</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body text-center">
                        <h4>@Model.Count(b => b.Status == HostelMS.Models.BookingStatus.Approved)</h4>
                        <small>Approved</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body text-center">
                        <h4>@Model.Count(b => b.Status == HostelMS.Models.BookingStatus.CheckedIn)</h4>
                        <small>Checked In</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-secondary text-white">
                    <div class="card-body text-center">
                        <h4>@Model.Count()</h4>
                        <small>Total Bookings</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Booking Details</th>
                                <th>Course</th>
                                <th>Hostel & Room</th>
                                <th>Dates</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var booking in Model)
                            {
                                var courseName = "";
                                var isRestricted = false;
                                
                                if (!string.IsNullOrEmpty(booking.Course))
                                {
                                    courseName = booking.GetCourseDisplayName();
                                    isRestricted = booking.IsCourseRestricted();
                                }
                                
                                <tr>
                                    <td>
                                        <div class="fw-bold">#@booking.BookingId</div>
                                        <div class="small text-muted">Booked on: @booking.BookingDate.ToString("dd MMM yyyy")</div>
                                        <div class="small text-muted">Amount: UGX @booking.TotalAmount.ToString("N0")</div>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(booking.Course))
                                        {
                                            <div class="small">
                                                <span class="badge @(isRestricted ? "bg-warning text-dark" : "bg-info text-white")">
                                                    @if (!string.IsNullOrEmpty(courseName) && courseName.Length > 35)
                                                    {
                                                        @(courseName.Substring(0, 35) + "...")
                                                    }
                                                    else
                                                    {
                                                        @courseName
                                                    }
                                                </span>
                                                @if (isRestricted)
                                                {
                                                    <div class="mt-1">
                                                        <span class="badge bg-danger small">⚠️ Restricted Course</span>
                                                    </div>
                                                    <div class="small text-warning mt-1">
                                                        <i class="fas fa-info-circle"></i> Should visit Dean's office
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted small">Course not specified</span>
                                        }
                                    </td>
                                    <td>
                                        @if (booking.Room?.Hostel != null)
                                        {
                                            <div class="fw-bold">@booking.Room.Hostel.Name</div>
                                            <div class="small text-muted">Room: @booking.Room.RoomNumber</div>
                                            <div class="small text-muted">Type: @booking.Room.Type</div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Unknown</span>
                                        }
                                    </td>
                                    <td>
                                        <div><i class="fas fa-calendar-check text-success me-1"></i> @booking.CheckInDate.ToString("dd MMM yyyy")</div>
                                        <div><i class="fas fa-calendar-times text-danger me-1"></i> @booking.CheckOutDate.ToString("dd MMM yyyy")</div>
                                        @{
                                            var duration = (booking.CheckOutDate - booking.CheckInDate).Days;
                                        }
                                        <div class="small text-muted">@duration day(s)</div>
                                    </td>
                                    <td>
                                        @switch (booking.Status)
                                        {
                                            case HostelMS.Models.BookingStatus.Pending:
                                                <div class="badge bg-warning text-dark p-2">
                                                    <i class="fas fa-clock me-1"></i> Pending
                                                </div>
                                                <div class="small text-muted mt-1">
                                                    Awaiting approval
                                                </div>
                                                break;
                                            case HostelMS.Models.BookingStatus.Approved:
                                                <div class="badge bg-success p-2">
                                                    <i class="fas fa-check-circle me-1"></i> Approved
                                                </div>
                                                @if (!string.IsNullOrEmpty(booking.ApprovedBy))
                                                {
                                                    <div class="small text-muted mt-1">
                                                        Approved on: @(booking.ApprovalDate?.ToString("dd MMM yyyy") ?? "")
                                                    </div>
                                                }
                                                break;
                                            case HostelMS.Models.BookingStatus.Rejected:
                                                <div class="badge bg-danger p-2">
                                                    <i class="fas fa-times-circle me-1"></i> Rejected
                                                </div>
                                                @if (!string.IsNullOrEmpty(booking.RejectionReason))
                                                {
                                                    <div class="small text-muted mt-1">
                                                        Reason: @(booking.RejectionReason.Length > 50 ? booking.RejectionReason.Substring(0, 50) + "..." : booking.RejectionReason)
                                                    </div>
                                                }
                                                break;
                                            case HostelMS.Models.BookingStatus.CheckedIn:
                                                <div class="badge bg-primary p-2">
                                                    <i class="fas fa-sign-in-alt me-1"></i> Checked In
                                                </div>
                                                <div class="small text-muted mt-1">
                                                    Currently residing
                                                </div>
                                                break;
                                            case HostelMS.Models.BookingStatus.CheckedOut:
                                                <div class="badge bg-secondary p-2">
                                                    <i class="fas fa-sign-out-alt me-1"></i> Checked Out
                                                </div>
                                                <div class="small text-muted mt-1">
                                                    Stay completed
                                                </div>
                                                break;
                                            case HostelMS.Models.BookingStatus.Cancelled:
                                                <div class="badge bg-dark p-2">
                                                    <i class="fas fa-ban me-1"></i> Cancelled
                                                </div>
                                                <div class="small text-muted mt-1">
                                                    Booking cancelled
                                                </div>
                                                break;
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group-vertical btn-group-sm">
                                            <a asp-action="Details" asp-route-id="@booking.BookingId" 
                                               class="btn btn-outline-primary">
                                                <i class="fas fa-eye me-1"></i> View Details
                                            </a>
                                            
                                            @if (booking.Status == HostelMS.Models.BookingStatus.Pending)
                                            {
                                                <button type="button" class="btn btn-outline-danger" 
                                                        data-bs-toggle="modal" 
                                                        data-bs-target="#cancelModal@(booking.BookingId)">
                                                    <i class="fas fa-times me-1"></i> Cancel
                                                </button>
                                            }
                                            
                                            @if (booking.Status == HostelMS.Models.BookingStatus.Approved)
                                            {
                                                <div class="btn btn-outline-success disabled">
                                                    <i class="fas fa-check me-1"></i> Ready to Check-in
                                                </div>
                                            }
                                        </div>
                                        
                                        <!-- Cancel Modal -->
                                        @if (booking.Status == HostelMS.Models.BookingStatus.Pending)
                                        {
                                            <div class="modal fade" id="cancelModal@(booking.BookingId)" tabindex="-1" 
                                                 aria-labelledby="cancelModalLabel@(booking.BookingId)" aria-hidden="true">
                                                <div class="modal-dialog">
                                                    <div class="modal-content">
                                                        <div class="modal-header bg-danger text-white">
                                                            <h5 class="modal-title" id="cancelModalLabel@(booking.BookingId)">
                                                                Confirm Cancellation
                                                            </h5>
                                                            <button type="button" class="btn-close btn-close-white" 
                                                                    data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body">
                                                            <p>Are you sure you want to cancel your booking for:</p>
                                                            <ul>
                                                                <li><strong>Hostel:</strong> @(booking.Room?.Hostel?.Name ?? "Unknown")</li>
                                                                <li><strong>Room:</strong> @(booking.Room?.RoomNumber ?? "Unknown")</li>
                                                                <li><strong>Check-in Date:</strong> @booking.CheckInDate.ToString("dd MMM yyyy")</li>
                                                                @if (!string.IsNullOrEmpty(booking.Course))
                                                                {
                                                                    <li><strong>Course:</strong> @courseName</li>
                                                                }
                                                            </ul>
                                                            <p class="text-danger">This action cannot be undone!</p>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                                                <i class="fas fa-times me-1"></i> No, Keep Booking
                                                            </button>
                                                            <form asp-action="Cancel" asp-route-id="@booking.BookingId" method="post" style="display: inline;">
                                                                <button type="submit" class="btn btn-danger">
                                                                    <i class="fas fa-check me-1"></i> Yes, Cancel Booking
                                                                </button>
                                                            </form>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        
        <div class="row mt-4">
            <div class="col-md-6">
                <a asp-action="Index" class="btn btn-primary">
                    <i class="fas fa-plus-circle me-2"></i>Book Another Hostel
                </a>
            </div>
            <div class="col-md-6 text-end">
                <!-- Course Restriction Info -->
                @{
                    var hasRestrictedCourseBooking = Model.Any(b => !string.IsNullOrEmpty(b.Course) && b.IsCourseRestricted());
                }
                @if (hasRestrictedCourseBooking)
                {
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Notice:</strong> You have bookings for restricted courses. 
                        <a asp-action="RestrictedCourseInfo" class="alert-link">Learn more about course restrictions</a>.
                    </div>
                }
            </div>
        </div>
    }
</div>